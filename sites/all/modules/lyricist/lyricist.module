<?php

// require('Jwilsson-Spotify-API/spotify-web-api-php/src/cacert.pem');
require('Jwilsson-Spotify-API/src/Request.php');
require('Jwilsson-Spotify-API/src/Session.php');
require('Jwilsson-Spotify-API/src/SpotifyWebAPI.php');
require('Jwilsson-Spotify-API/src/SpotifyWebAPIException.php');

function lyricist_menu(){
    $items['lyricist'] = array(
        'title' => 'Lyricist',
        'page callback' => 'lyricist',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['custom_lyrics'] = array(
        'title' => 'Customize',
        'page callback' => 'custom',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}
function lyricist(){
  $Client_ID = '7dbab38ffefc4f5a9afafb5c58cb1304';
  $Client_Secret = 'cbc1787e5333412398134b718187e558';


  //// SPOTIFY LOGIN/ARTIST RETRIEVAL
  $session = new SpotifyWebAPI\Session(
    $Client_ID,
    $Client_Secret,
    'http://localhost:8888/lyricist'
);

$api = new SpotifyWebAPI\SpotifyWebAPI();

if (isset($_GET['code'])) {
    $session->requestAccessToken($_GET['code']);
    $api->setAccessToken($session->getAccessToken());
  } else {
    $options = [
        'scope' => [
            'user-top-read',
            'user-read-recently-played'
        ],
    ];

    header('Location: ' . $session->getAuthorizeUrl($options));
    die();
}

  $request_user_top_tracks = curl_init('https://api.spotify.com/v1/me/player/recently-played?limit=50');
  // $request_user_top_tracks = curl_init('https://api.spotify.com/v1/me/top/tracks');
   curl_setopt($request_user_top_tracks, CURLOPT_HTTPHEADER,['Accept: application/json','Authorization: Bearer '.$api->accessTokenCopy]);
  curl_setopt($request_user_top_tracks, CURLOPT_RETURNTRANSFER, 1);
  $result = curl_exec($request_user_top_tracks);
  $result = json_decode($result);
  // echo '<pre>';
  // var_dump(($result));
  // echo '</pre>';

  $songs = array();
////////////////////////FOR TOP TRACKS
//   for($i=0;$i<count($result->items);$i++){
//   // for($i=0;$i<1;$i++){
//     $topartist = $result->items[$i]->artists[0]->name;
//     $topsong = $result->items[$i]->name;
//
//     $topartist = str_replace(' ', '_', $topartist);
//     $topsong = str_replace(' ', '_', $topsong);
//
//     $song = (object) array('artist' => $topartist, 'name' => $topsong, 'lyrics'=>'');
//     $songs[] = $song;
// }
// echo '<pre>';
// var_dump($songs);
// echo '</pre>';

//////////////////////FOR RECENTLY PLAYED
  for($i=0;$i<count($result->items);$i++){
  // for($i=0;$i<1;$i++){
    $topartist = $result->items[$i]->track->artists[0]->name;
    $topsong = $result->items[$i]->track->name;

    $topartist = str_replace(' ', '_', $topartist);
    $topsong = str_replace(' ', '_', $topsong);

    $song = (object) array('artist' => $topartist, 'name' => $topsong, 'lyrics'=>'');
    $songs[] = $song;
}
// echo '<pre>';
// var_dump($songs);
// echo '</pre>';


  ///////////// musiXmatch API RETRIEVAL
  for($i = 0; $i<count($songs); $i++){

    $request_artist_by_id = curl_init("https://musixmatchcom-musixmatch.p.mashape.com/wsr/1.1/matcher.lyrics.get?q_artist=".$songs[$i]->artist."&q_track=".$songs[$i]->name);

    curl_setopt($request_artist_by_id, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($request_artist_by_id, CURLOPT_HEADER, 1);
    curl_setopt($request_artist_by_id, CURLOPT_HTTPHEADER,['X-Mashape-Key: 6zI3kSR5Zymshc4rcqB9VolNgEHqp196DHQjsnhU0JguOfReCs','Accept: application/json']);

    $result = curl_exec($request_artist_by_id);
    curl_close($request_artist_by_id);
    preg_match('/[{]/', $result, $matches, PREG_OFFSET_CAPTURE);
      if($matches){
        $result = substr($result, $matches[0][1]);
        $result = json_decode($result);
        $lyrics = $result->lyrics_body;
        preg_match('/\.\.\./', $lyrics, $matches, PREG_OFFSET_CAPTURE);
        $lyrics = substr($lyrics, 0, $matches[0][1]);
        $songs[$i]->lyrics = $lyrics;
      }
    }
    // echo '<pre>';
    // var_dump($songs);
    // echo '</pre>';
    // exit;

    ////////// WATSON


  $url = "https://gateway.watsonplatform.net/natural-language-understanding/api";

  $watson_api_keys = (object) array('username'=>'76c53b2b-574d-4bc7-aa1e-168abc2eefcd','password'=>'TMsBHoGkGebY');

  // $songs[0]->lyrics = urlencode($songs[0]->lyrics);
  $all_lyrics = '';
  for($i=0;$i<count($songs);$i++){
    $all_lyrics .= ' '.$songs[$i]->lyrics;
  }
  $all_lyrics = urlencode($all_lyrics);
  if(strlen($all_lyrics) > 7500) {
    $all_lyrics = substr($all_lyrics, 0, 7500);
  }
  $watson_request = curl_init('https://gateway.watsonplatform.net/natural-language-understanding/api/v1/analyze?version=2017-02-27&text='.$all_lyrics.'&features=categories,concepts,emotion,entities,keywords,relations,semantic_roles,sentiment');

  curl_setopt($watson_request, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($watson_request, CURLOPT_HEADER, 1);
  curl_setopt($watson_request, CURLOPT_HTTPHEADER, ["Content-Type: application/json"]);
  curl_setopt($watson_request, CURLOPT_POST, 1);
  curl_setopt($watson_request, CURLOPT_USERPWD, $watson_api_keys->username.":".$watson_api_keys->password);

  $result = curl_exec($watson_request);
  // echo '<pre>';
  // var_dump($all_lyrics);
  // var_dump($result);
  // echo '</pre>';

  $_SESSION['result'] = $result;













    return 'hello';
  }


  function custom() {
    preg_match('/[{]/', $_SESSION['result'], $matches, PREG_OFFSET_CAPTURE);
    if ($matches) {
      $result = substr($_SESSION['result'], $matches[0][1]);
      $result = json_decode($result);
    }
    // echo "<pre>";
    // var_dump($result);
    // echo "</pre>";
    // exit;
    $semantic_subjects = array();
    $semantic_objects = array();
    $semantic_actions = array();
    $keywords = array();
    for ($i=0;$i<count($result->semantic_roles);$i++){
      if($result->semantic_roles[$i]->subject->text) {
        $semantic_subjects[] = $result->semantic_roles[$i]->subject->text;
      }
      if($result->semantic_roles[$i]->object->text){
        $semantic_objects[] = $result->semantic_roles[$i]->object->text;
      }
      if($result->semantic_roles[$i]->action->text){
        $semantic_actions[] = $result->semantic_roles[$i]->action->text;
      }
    }
    for ($i=0;$i<count($result->keywords);$i++){
      if($result->keywords[$i]) {
        $keywords[] = $result->keywords[$i]->text;
      }
    }
    shuffle($semantic_subjects);
    shuffle($semantic_objects);
    shuffle($semantic_actions);
    shuffle($keywords);
    $custom_poem = '';
    for ($i=0; $i<20; $i++) {
      if($i%2 === 0){
        $custom_poem .= ' '. $semantic_subjects[$i].' '.$semantic_actions[$i].' '.$semantic_objects[$i];
        echo $semantic_subjects[$i].' '.$semantic_actions[$i].' '.$semantic_objects[$i];
      } else {
        $custom_poem .= ' '. $keywords[$i].' '.$semantic_actions[$i].' '.$semantic_objects[$i];
        echo $keywords[$i].' '.$semantic_actions[$i].' '.$semantic_objects[$i];
      }
      echo '<br>';
    }
    $custom_poem_url = urlencode($custom_poem);
    // echo "<pre>";
    // var_dump($keywords);
    // echo "</pre>";

    // exit;

//////////////////////TONE ANALYSIS FOR GENERATED LYRICS
    // if (!$_SESSION['tone_result']){
    //   $url = "https://gateway.watsonplatform.net/tone-analyzer/api/v3";
    //
    // $watson_api_keys = (object) array('username'=>'56547f14-ba17-4092-8f0f-e7452a71db67','password'=>'JgN81MDveyEm');
    //
    // $watson_request = curl_init($url.'/tone?version=2016-05-19&text='.$custom_poem_url);
    //
    // curl_setopt($watson_request, CURLOPT_RETURNTRANSFER, 1);
    // curl_setopt($watson_request, CURLOPT_USERPWD, $watson_api_keys->username.":".$watson_api_keys->password);
    //
    // $tone_result = curl_exec($watson_request);
    // $tone_result = json_decode($tone_result);
    // $_SESSION['tone_result'] = $tone_result;
    // echo 'made call';
  // }
  // echo "<pre>";
  // var_dump($_SESSION['tone_result']);
  // echo "</pre>";
  }
